{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapSetToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","dialogs_mod","dialogs","id","name","Message","mess","maxLength30","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","Dialogs","dialogPage","dialogElements","dialogData","map","dialog","messageElement","messageData","message","users","messages","event","sendMessage","newMessageBodyField","compose","dispatch","sendMessageCreator"],"mappings":"uNAKIA,EAAwB,SAACC,GAAD,MAAY,CACpCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAc,IACrCC,EADoC,4JAEtC,WACI,OAAIC,KAAKC,MAAMN,OAIR,cAACG,EAAD,eAAeE,KAAKC,QAHhB,cAAC,IAAD,CAAUC,GAAI,eAJS,GACVC,IAAML,WAYtC,OAFqCM,YAAQX,EAARW,CAA+BL,K,oBCnBxEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,OAAS,wBAAwB,SAAW,4B,sHCYjHC,EARI,SAACN,GAChB,OACI,qBAAKO,UAAWC,IAAYC,QAA5B,SACI,cAAC,IAAD,CAASR,GAAI,aAAeD,EAAMU,GAAlC,SAAuCV,EAAMW,UCK1CC,EARC,SAACZ,GACb,OACI,8BACKA,EAAMa,Q,yCC2BbC,EAAcC,YAAiB,IAc/BC,EAAmBC,YAAU,CAC/BC,KAAM,WADeD,EAbL,SAACjB,GACjB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,cAACC,EAAA,EAAD,CACIV,KAAM,sBACNW,YAAY,oGACZC,SAAU,CAACC,IAAUV,GACrBW,UAAWC,MAEf,mJAQGC,EA5CC,SAAC3B,GACb,IAAIP,EAAQO,EAAM4B,WAEdC,EAAiBpC,EAAMqC,WAAWC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYtB,GAAIsB,EAAOtB,GAAIC,KAAMqB,EAAOrB,MAAWqB,EAAOtB,OAG1DuB,EAAiBxC,EAAMyC,YAAYH,KAAI,SAACI,GAAD,OAAa,cAAC,EAAD,CAAStB,KAAMsB,EAAQA,SAAcA,EAAQzB,OAMrG,OAAKV,EAAMN,OAIP,sBAAKa,UAAWC,IAAYC,QAA5B,UACI,qBAAKF,UAAWC,IAAY4B,MAA5B,SAAoCP,IAEpC,qBAAKtB,UAAWC,IAAY6B,SAA5B,SAAuCJ,IAEvC,cAACjB,EAAD,CAAkBG,SAbN,SAACmB,GAEjBtC,EAAMuC,YAAYD,EAAME,2BAGjB,cAAC,IAAD,CAAUvC,GAAI,YCJdwC,sBAAQtC,aAbD,SAACV,GACnB,MAAO,CACHmC,WAAYnC,EAAMmC,eAGD,SAACc,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAK6B5C,IAAtD6C,CAAwEd","file":"static/js/5.22055a64.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nlet mapSetToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth){\r\n                return <Redirect to={\"/login\"} />\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapSetToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n} ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3d0QP\",\"users\":\"Dialogs_users__1OYvH\",\"active\":\"Dialogs_active__w2DE_\",\"messages\":\"Dialogs_messages__3Pp9e\"};","import React from 'react';\r\nimport dialogs_mod from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={dialogs_mod.dialogs}>\r\n            <NavLink to={'/messages/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            {props.mess}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport dialogs_mod from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/Form/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogPage;\r\n\r\n    let dialogElements = state.dialogData.map((dialog) => (\r\n        <DialogItem id={dialog.id} name={dialog.name} key={dialog.id} />\r\n    ));\r\n\r\n    let messageElement = state.messageData.map((message) => <Message mess={message.message} key={message.id} />);\r\n\r\n    let addNewMessage = (event) => {\r\n        // console.log(event.newMessageBodyField);\r\n        props.sendMessage(event.newMessageBodyField);\r\n    };\r\n    if (!props.isAuth) {\r\n        return <Redirect to={\"/login\"} />;\r\n    }\r\n    return (\r\n        <div className={dialogs_mod.dialogs}>\r\n            <div className={dialogs_mod.users}>{dialogElements}</div>\r\n\r\n            <div className={dialogs_mod.messages}>{messageElement}</div>\r\n\r\n            <DialogsReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n};\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                name={\"newMessageBodyField\"}\r\n                placeholder=\"Введите сообщение\"\r\n                validate={[required, maxLength30]}\r\n                component={Textarea}\r\n            />\r\n            <button>Оправить сообщение</button>\r\n        </form>\r\n    );\r\n};\r\nconst DialogsReduxForm = reduxForm({\r\n    form: \"dialogs\",\r\n})(DialogsForm);\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreator} from \"../../redux/dialog_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBodyField) => {\r\n            dispatch(sendMessageCreator(newMessageBodyField));\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}